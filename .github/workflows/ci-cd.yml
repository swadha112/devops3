name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/gh-actions-demo

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests
        run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build image
        run: docker build -t $IMAGE_NAME:${{ steps.vars.outputs.TAG }} -t $IMAGE_NAME:latest .

      - name: Push image
        run: |
          docker push $IMAGE_NAME:${{ steps.vars.outputs.TAG }}
          docker push $IMAGE_NAME:latest

      - name: Run container (demo deploy)
        run: |
          docker run -d --name app -p 3000:3000 $IMAGE_NAME:${{ steps.vars.outputs.TAG }}
          # wait for app
          for i in {1..10}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "App is up ✅"
              exit 0
            fi
            echo "Waiting for app to start ($i/10)..."
            docker logs app --tail 20 || true
            sleep 2
          done
          echo "App failed to start ❌"
          docker logs app
          exit 1